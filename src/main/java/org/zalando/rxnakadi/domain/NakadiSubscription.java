package org.zalando.rxnakadi.domain;

import java.time.Instant;

import java.util.Set;

import javax.annotation.Nullable;

import javax.validation.constraints.NotNull;
import javax.validation.constraints.Null;
import javax.validation.constraints.Size;

import org.immutables.value.Value;

@Value.Immutable
public interface NakadiSubscription {

    /**
     * Reads from the oldest available event.
     */
    String POSITION_BEGIN = "begin";

    String POSITION_END = "end";

    /**
     * Id of subscription that was created.
     *
     * <p>Generated by Nakadi.</p>
     */
    @Nullable
    @Size(min = 1)
    @Null(groups = Outbound.class)
    @NotNull(groups = Inbound.class)
    String getId();

    /**
     * The id of application owning the subscription.
     *
     * <p>The reading and modification of subscription will be limited to this application id.</p>
     */
    @NotNull
    @Size(min = 1)
    String getOwningApplication();

    /**
     * EventTypes to subscribe to.
     *
     * <p>Subscriptions that differ only be the order of EventTypes will be considered the same and will have the same
     * id.</p>
     */
    @NotNull
    @Size(min = 1)
    Set<EventType> getEventTypes();

    /**
     * The value describing the use case of this subscription.
     *
     * <p>In general that is an additional identifier used to differ subscriptions having the same owning application
     * and event types.</p>
     */
    @Nullable
    @Size(min = 1)
    String getConsumerGroup();

    /**
     * Timestamp of creation of the subscription.
     *
     * <p>Generated by Nakadi.</p>
     */
    @Nullable
    @Null(groups = Outbound.class)
    @NotNull(groups = Inbound.class)
    Instant getCreatedAt();

    /**
     * Position to start reading events from.
     *
     * <p>Applied in the moment when client starts reading from a subscription.</p>
     */
    @Nullable
    @Size(min = 1)
    String getReadFrom();
}
